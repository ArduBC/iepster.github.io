.layout{
  @include flexbox;
}
.layout-row{
  @include flex-direction(row);
  @include flexbox;
}

.layout-column{
  @include flex-direction(column);
  @include flexbox;
}
.layout-row {

  @each $size in $spacingSizeList {

    &.with-mg-#{nth($size, 1)} {
      @include spacingOutput(margin, hori, '', #{'-' + nth($size, 2) / 2});
      > .layout-item{
        @include spacingOutput(margin, hori, '', (nth($size, 2) / 2) );
      }
    }
  }
}

.layout--wrap{
  @include flex-wrap(wrap);
}

.layout-column {

  @each $size in $spacingSizeList {

    &.with-mg-#{nth($size, 1)} {
      @include spacingOutput(margin, vert, '', #{'-' + nth($size, 2) / 2});
      > .layout-item{
        @include spacingOutput(margin, vert, '', (nth($size, 2) / 2) );
      }
    }
  }
}

.row {

  white-space: nowrap;

  @each $size in $spacingSizeList {

    &.#{nth($size, 1)} {
      @include spacingOutput(margin, hori, '', #{'-' + (nth($size, 2) / 2)});
    }
  }

  @each $size in $spacingSizeList {

    .has-mg-hori-#{nth($size, 1)} {
      @include spacingOutput(margin, hori, '', #{nth($size, 2) / 2});
    }
  }

}

.align-self-bottom{
  @include justify-content(flex-end);
}

.is-float-left{
  float: left;
}

.is-float-right{
  float: left;
}

.col {
  display: inline-block;
}


.layout--no-shrink {
  @include flex-shrink(0);
}

$flexJustifyList: start flex-start, end flex-end, center center, space-around space-around, space-between space-between, none initial;
$flexAlignList: baseline baseline, center center, end flex-end, start flex-start, stretch stretch, none initial;

@each $just in $flexJustifyList {
  // kvp stands for 'key-value pair'
  $exceptions: vert, hori;
  $justName: nth($just, 1);
  $justVal: nth($just, 2);

  @each $align in $flexAlignList {
    $alName: nth($align, 1);
    $alVal: nth($align, 2);
    .layout--#{$justName}-#{$alName} {
      @include justify-content($justVal);
      @include align-items($alVal);
    }

  }
}

.flex {
  @include flex-grow(1);
}

.transition-all {
  @include transition(all 0.2s ease);
}

.is-scrollable-y {
  overflow-y: auto;
  &::-webkit-scrollbar {
    width: 0px;
  }

  &::-webkit-scrollbar-thumb {
    //background-color: map-get($colorList, secondary);
    border: 7px solid transparent;
    background-clip: content-box;

  }

  &::-webkit-scrollbar-track {
    //background: map-get($colorList, shade-3);
    border: 0px solid transparent;
    border-radius: 9px;
    background-clip: content-box;

  }
}

.is-scrollable-x {
  overflow-x: auto;
}

.is-not-scrollable {
  overflow: hidden;
}

.divider {
  height: 1px;
}

// position

.is-relative {
  position: relative;
}

.is-absolute {
  position: absolute;
}

.is-fixed {
  position: fixed;
}

// cursor

.has-cursor {
  cursor: pointer;
}
